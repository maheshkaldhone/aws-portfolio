name: ci

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
  
jobs:  
  Build:
    name: 'Build the code'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x, 20.x]
    
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci

  CodeQuality:
    name: Code quality scan 
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    needs: Build
  
    strategy:
      fail-fast: false
      matrix:
        language: ['javascript'] 
        
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}
        
      - name: Autobuild
        uses: github/codeql-action/autobuild@v1

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1

  BuildDocker:
    name: Build Docker image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)

      - name: Log into Docker Hub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Push Docker image to Docker Hub
        run: |
          docker tag my-image-name:$(date +%s) ${{ secrets.DOCKERHUB_USERNAME }}/my-image-name:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/my-image-name:latest
